//Maximum AND Value
We are given an array of n positive elements. we need to find the maximum AND value generated by any pair of element from the array. AND is bitwise & operator.

Examples:

Input : arr[] = {4, 8, 12, 16}
Output : Maximum AND value = 8

Input : arr[] = {4, 8, 16, 2}
Output : Maximum AND value = 0

//step 1: Write Bit-representation of each element :
4 = 100, 8 = 1000, 12 = 1100, 16 = 10000
step 2: Check for 1st MSB , pattern = 0 + 16 = 16. Now 5th bit in 16 is set but no other element has 5-bit as set bit so this will not add up to our RES, still RES = 0 and pattern = 0
step 3: Check 4th bit, pattern = 0 + 8 = 8. Now 8 and 12 both have set bit on 4th bit position so that will add up in our solution, RES = 8 and pattern = 8
step 4: Check 3rd bit, pattern = 8 + 4 = 12. Now only 12 has both bits set bit (same as pattern) so we will discard 3rd bit, RES = 8 and pattern = 8
step 5: Check 2nd bit, pattern = 8 + 2 = 10. No element has set bit same as pattern so we will discard 2nd bit, RES = 8 and pattern = 8
step 4: Check 1st bit, pattern = 8 + 1 = 9. No element has set bit same as pattern so we will discard 1st bit, RES = 8 and pattern = 8




// Java Program to find maximum 
// XOR value of a pair 
import java.util.*; 
import java.lang.*; 
    
public class GfG{ 
  
// Utility function to check number of elements 
// having set msb as of pattern 
static int checkBit(int pattern, int arr[], int n) 
{ 
    int count = 0; 
    for (int i = 0; i < n; i++) 
        if ((pattern & arr[i]) == pattern) 
            count++; 
    return count; 
} 
   
// Function for finding maximum and value pair 
static int maxAND (int arr[], int n) 
{ 
    int res = 0, count; 
   
    // iterate over total of 30bits  
    // from msb to lsb 
    for (int bit = 31; bit >= 0; bit--) 
    { 
        // find the count of element 
        // having set msb 
        count = checkBit(res | (1 << bit), arr, n); 
   
        // if count >= 2 set particular  
        // bit in result 
        if ( count >= 2 )      
            res |= (1 << bit);      
    } 
   
    return res; 
} 
    
// driver function 
public static void main(String argc[]) 
{ 
    int arr[] = {4, 8, 6, 2}; 
    int n = arr.length; 
    System.out.println("Maximum AND Value = " +  
                       maxAND(arr, n)); 
} 
} 
  
